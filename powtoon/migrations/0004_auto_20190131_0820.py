# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-01-31 08:20
from __future__ import unicode_literals

from django.contrib.auth.models import User, Group, Permission
from django.contrib.contenttypes.models import ContentType
from django.db import migrations

from powtoon.permissions import ADMIN_GROUP_PERMISSIONS, USER_GROUP_PERMISSIONS, ALL_PERMISSIONS

user_names = ['test_admin', 'test_user1', 'test_user2']


def create_users(apps, schema_editor):
    global user_names
    password = 'Test1234'
    for name in user_names:
        User.objects.create_user(username=name, email=name + "@gmail.com", password=password)


def create_permissions(apps, schema_editor):
    content_type, created = ContentType.objects.get_or_create(app_label='powtoon', model='Powtoon')
    for perm in ALL_PERMISSIONS:
        Permission.objects.get_or_create(codename=perm,
                                         name=" ".join(perm.split("_")).capitalize(),
                                         content_type=content_type)  # creating permissions


def create_group_permissions(apps, schema_editor):

    group, created = Group.objects.get_or_create(name='admin_group_permission')
    for perm in ADMIN_GROUP_PERMISSIONS:
        permission = Permission.objects.get(codename=perm)
        group.permissions.add(permission)
    group, created = Group.objects.get_or_create(name='user_group_permission')
    for perm in USER_GROUP_PERMISSIONS:
        permission = Permission.objects.get(codename=perm)
        group.permissions.add(permission)


def add_permission_to_users(apps, schema_editor):
    global user_names
    for username in user_names:
        user = User.objects.get(username=username)
        if '_admin' not in username:
            for perm_code in USER_GROUP_PERMISSIONS:
                perm = Permission.objects.get(codename=perm_code)
                user.user_permissions.add(perm)
            user_group = Group.objects.get(name='user_group_permission')
            user.groups.add(user_group)

        else:
            for perm_code in ADMIN_GROUP_PERMISSIONS:
                perm = Permission.objects.get(codename=perm_code)
                user.user_permissions.add(perm)
            user_group = Group.objects.get(name='admin_group_permission')
            user.groups.add(user_group)


class Migration(migrations.Migration):

    dependencies = [
        ('powtoon', '0003_auto_20190130_0933'),
    ]

    operations = [
        migrations.RunPython(create_users),
        migrations.RunPython(create_permissions),
        migrations.RunPython(create_group_permissions),
        migrations.RunPython(add_permission_to_users),
    ]
